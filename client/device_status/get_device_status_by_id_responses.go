// Code generated by go-swagger; DO NOT EDIT.

package device_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// GetDeviceStatusByIDReader is a Reader for the GetDeviceStatusByID structure.
type GetDeviceStatusByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceStatusByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeviceStatusByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDeviceStatusByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDeviceStatusByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeviceStatusByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDeviceStatusByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetDeviceStatusByIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDeviceStatusByIDOK creates a GetDeviceStatusByIDOK with default headers values
func NewGetDeviceStatusByIDOK() *GetDeviceStatusByIDOK {
	return &GetDeviceStatusByIDOK{}
}

/*
GetDeviceStatusByIDOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetDeviceStatusByIDOK struct {
	Payload *models.DeviceStatus
}

// IsSuccess returns true when this get device status by Id o k response has a 2xx status code
func (o *GetDeviceStatusByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get device status by Id o k response has a 3xx status code
func (o *GetDeviceStatusByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get device status by Id o k response has a 4xx status code
func (o *GetDeviceStatusByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get device status by Id o k response has a 5xx status code
func (o *GetDeviceStatusByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get device status by Id o k response a status code equal to that given
func (o *GetDeviceStatusByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetDeviceStatusByIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdOK  %+v", 200, o.Payload)
}

func (o *GetDeviceStatusByIDOK) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdOK  %+v", 200, o.Payload)
}

func (o *GetDeviceStatusByIDOK) GetPayload() *models.DeviceStatus {
	return o.Payload
}

func (o *GetDeviceStatusByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceStatusByIDUnauthorized creates a GetDeviceStatusByIDUnauthorized with default headers values
func NewGetDeviceStatusByIDUnauthorized() *GetDeviceStatusByIDUnauthorized {
	return &GetDeviceStatusByIDUnauthorized{}
}

/*
GetDeviceStatusByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type GetDeviceStatusByIDUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this get device status by Id unauthorized response has a 2xx status code
func (o *GetDeviceStatusByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get device status by Id unauthorized response has a 3xx status code
func (o *GetDeviceStatusByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get device status by Id unauthorized response has a 4xx status code
func (o *GetDeviceStatusByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get device status by Id unauthorized response has a 5xx status code
func (o *GetDeviceStatusByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get device status by Id unauthorized response a status code equal to that given
func (o *GetDeviceStatusByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetDeviceStatusByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDeviceStatusByIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDeviceStatusByIDUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceStatusByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceStatusByIDForbidden creates a GetDeviceStatusByIDForbidden with default headers values
func NewGetDeviceStatusByIDForbidden() *GetDeviceStatusByIDForbidden {
	return &GetDeviceStatusByIDForbidden{}
}

/*
GetDeviceStatusByIDForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type GetDeviceStatusByIDForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this get device status by Id forbidden response has a 2xx status code
func (o *GetDeviceStatusByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get device status by Id forbidden response has a 3xx status code
func (o *GetDeviceStatusByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get device status by Id forbidden response has a 4xx status code
func (o *GetDeviceStatusByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get device status by Id forbidden response has a 5xx status code
func (o *GetDeviceStatusByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get device status by Id forbidden response a status code equal to that given
func (o *GetDeviceStatusByIDForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetDeviceStatusByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetDeviceStatusByIDForbidden) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetDeviceStatusByIDForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceStatusByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceStatusByIDNotFound creates a GetDeviceStatusByIDNotFound with default headers values
func NewGetDeviceStatusByIDNotFound() *GetDeviceStatusByIDNotFound {
	return &GetDeviceStatusByIDNotFound{}
}

/*
GetDeviceStatusByIDNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type GetDeviceStatusByIDNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this get device status by Id not found response has a 2xx status code
func (o *GetDeviceStatusByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get device status by Id not found response has a 3xx status code
func (o *GetDeviceStatusByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get device status by Id not found response has a 4xx status code
func (o *GetDeviceStatusByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get device status by Id not found response has a 5xx status code
func (o *GetDeviceStatusByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get device status by Id not found response a status code equal to that given
func (o *GetDeviceStatusByIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetDeviceStatusByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetDeviceStatusByIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetDeviceStatusByIDNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceStatusByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceStatusByIDInternalServerError creates a GetDeviceStatusByIDInternalServerError with default headers values
func NewGetDeviceStatusByIDInternalServerError() *GetDeviceStatusByIDInternalServerError {
	return &GetDeviceStatusByIDInternalServerError{}
}

/*
GetDeviceStatusByIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type GetDeviceStatusByIDInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this get device status by Id internal server error response has a 2xx status code
func (o *GetDeviceStatusByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get device status by Id internal server error response has a 3xx status code
func (o *GetDeviceStatusByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get device status by Id internal server error response has a 4xx status code
func (o *GetDeviceStatusByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get device status by Id internal server error response has a 5xx status code
func (o *GetDeviceStatusByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get device status by Id internal server error response a status code equal to that given
func (o *GetDeviceStatusByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetDeviceStatusByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDeviceStatusByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDeviceStatusByIDInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceStatusByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceStatusByIDGatewayTimeout creates a GetDeviceStatusByIDGatewayTimeout with default headers values
func NewGetDeviceStatusByIDGatewayTimeout() *GetDeviceStatusByIDGatewayTimeout {
	return &GetDeviceStatusByIDGatewayTimeout{}
}

/*
GetDeviceStatusByIDGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type GetDeviceStatusByIDGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this get device status by Id gateway timeout response has a 2xx status code
func (o *GetDeviceStatusByIDGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get device status by Id gateway timeout response has a 3xx status code
func (o *GetDeviceStatusByIDGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get device status by Id gateway timeout response has a 4xx status code
func (o *GetDeviceStatusByIDGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this get device status by Id gateway timeout response has a 5xx status code
func (o *GetDeviceStatusByIDGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this get device status by Id gateway timeout response a status code equal to that given
func (o *GetDeviceStatusByIDGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *GetDeviceStatusByIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetDeviceStatusByIDGatewayTimeout) String() string {
	return fmt.Sprintf("[GET /v1/devices/id/{id}/status][%d] getDeviceStatusByIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetDeviceStatusByIDGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *GetDeviceStatusByIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
