// Code generated by go-swagger; DO NOT EDIT.

package hardware_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// CreateHardwareBrandReader is a Reader for the CreateHardwareBrand structure.
type CreateHardwareBrandReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateHardwareBrandReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateHardwareBrandOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateHardwareBrandBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateHardwareBrandUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateHardwareBrandForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateHardwareBrandConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateHardwareBrandInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewCreateHardwareBrandGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateHardwareBrandOK creates a CreateHardwareBrandOK with default headers values
func NewCreateHardwareBrandOK() *CreateHardwareBrandOK {
	return &CreateHardwareBrandOK{}
}

/*
CreateHardwareBrandOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateHardwareBrandOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create hardware brand o k response has a 2xx status code
func (o *CreateHardwareBrandOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create hardware brand o k response has a 3xx status code
func (o *CreateHardwareBrandOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hardware brand o k response has a 4xx status code
func (o *CreateHardwareBrandOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create hardware brand o k response has a 5xx status code
func (o *CreateHardwareBrandOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create hardware brand o k response a status code equal to that given
func (o *CreateHardwareBrandOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateHardwareBrandOK) Error() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandOK  %+v", 200, o.Payload)
}

func (o *CreateHardwareBrandOK) String() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandOK  %+v", 200, o.Payload)
}

func (o *CreateHardwareBrandOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateHardwareBrandOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHardwareBrandBadRequest creates a CreateHardwareBrandBadRequest with default headers values
func NewCreateHardwareBrandBadRequest() *CreateHardwareBrandBadRequest {
	return &CreateHardwareBrandBadRequest{}
}

/*
CreateHardwareBrandBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type CreateHardwareBrandBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create hardware brand bad request response has a 2xx status code
func (o *CreateHardwareBrandBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create hardware brand bad request response has a 3xx status code
func (o *CreateHardwareBrandBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hardware brand bad request response has a 4xx status code
func (o *CreateHardwareBrandBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create hardware brand bad request response has a 5xx status code
func (o *CreateHardwareBrandBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create hardware brand bad request response a status code equal to that given
func (o *CreateHardwareBrandBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateHardwareBrandBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandBadRequest  %+v", 400, o.Payload)
}

func (o *CreateHardwareBrandBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandBadRequest  %+v", 400, o.Payload)
}

func (o *CreateHardwareBrandBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateHardwareBrandBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHardwareBrandUnauthorized creates a CreateHardwareBrandUnauthorized with default headers values
func NewCreateHardwareBrandUnauthorized() *CreateHardwareBrandUnauthorized {
	return &CreateHardwareBrandUnauthorized{}
}

/*
CreateHardwareBrandUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type CreateHardwareBrandUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create hardware brand unauthorized response has a 2xx status code
func (o *CreateHardwareBrandUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create hardware brand unauthorized response has a 3xx status code
func (o *CreateHardwareBrandUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hardware brand unauthorized response has a 4xx status code
func (o *CreateHardwareBrandUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create hardware brand unauthorized response has a 5xx status code
func (o *CreateHardwareBrandUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create hardware brand unauthorized response a status code equal to that given
func (o *CreateHardwareBrandUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateHardwareBrandUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateHardwareBrandUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateHardwareBrandUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateHardwareBrandUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHardwareBrandForbidden creates a CreateHardwareBrandForbidden with default headers values
func NewCreateHardwareBrandForbidden() *CreateHardwareBrandForbidden {
	return &CreateHardwareBrandForbidden{}
}

/*
CreateHardwareBrandForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type CreateHardwareBrandForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create hardware brand forbidden response has a 2xx status code
func (o *CreateHardwareBrandForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create hardware brand forbidden response has a 3xx status code
func (o *CreateHardwareBrandForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hardware brand forbidden response has a 4xx status code
func (o *CreateHardwareBrandForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create hardware brand forbidden response has a 5xx status code
func (o *CreateHardwareBrandForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create hardware brand forbidden response a status code equal to that given
func (o *CreateHardwareBrandForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateHardwareBrandForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandForbidden  %+v", 403, o.Payload)
}

func (o *CreateHardwareBrandForbidden) String() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandForbidden  %+v", 403, o.Payload)
}

func (o *CreateHardwareBrandForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateHardwareBrandForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHardwareBrandConflict creates a CreateHardwareBrandConflict with default headers values
func NewCreateHardwareBrandConflict() *CreateHardwareBrandConflict {
	return &CreateHardwareBrandConflict{}
}

/*
CreateHardwareBrandConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this hardware brand record will conflict with an already existing hardware brand record.
*/
type CreateHardwareBrandConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create hardware brand conflict response has a 2xx status code
func (o *CreateHardwareBrandConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create hardware brand conflict response has a 3xx status code
func (o *CreateHardwareBrandConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hardware brand conflict response has a 4xx status code
func (o *CreateHardwareBrandConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create hardware brand conflict response has a 5xx status code
func (o *CreateHardwareBrandConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create hardware brand conflict response a status code equal to that given
func (o *CreateHardwareBrandConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateHardwareBrandConflict) Error() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandConflict  %+v", 409, o.Payload)
}

func (o *CreateHardwareBrandConflict) String() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandConflict  %+v", 409, o.Payload)
}

func (o *CreateHardwareBrandConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateHardwareBrandConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHardwareBrandInternalServerError creates a CreateHardwareBrandInternalServerError with default headers values
func NewCreateHardwareBrandInternalServerError() *CreateHardwareBrandInternalServerError {
	return &CreateHardwareBrandInternalServerError{}
}

/*
CreateHardwareBrandInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type CreateHardwareBrandInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create hardware brand internal server error response has a 2xx status code
func (o *CreateHardwareBrandInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create hardware brand internal server error response has a 3xx status code
func (o *CreateHardwareBrandInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hardware brand internal server error response has a 4xx status code
func (o *CreateHardwareBrandInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create hardware brand internal server error response has a 5xx status code
func (o *CreateHardwareBrandInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create hardware brand internal server error response a status code equal to that given
func (o *CreateHardwareBrandInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateHardwareBrandInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateHardwareBrandInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateHardwareBrandInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateHardwareBrandInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHardwareBrandGatewayTimeout creates a CreateHardwareBrandGatewayTimeout with default headers values
func NewCreateHardwareBrandGatewayTimeout() *CreateHardwareBrandGatewayTimeout {
	return &CreateHardwareBrandGatewayTimeout{}
}

/*
CreateHardwareBrandGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type CreateHardwareBrandGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create hardware brand gateway timeout response has a 2xx status code
func (o *CreateHardwareBrandGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create hardware brand gateway timeout response has a 3xx status code
func (o *CreateHardwareBrandGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create hardware brand gateway timeout response has a 4xx status code
func (o *CreateHardwareBrandGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this create hardware brand gateway timeout response has a 5xx status code
func (o *CreateHardwareBrandGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this create hardware brand gateway timeout response a status code equal to that given
func (o *CreateHardwareBrandGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *CreateHardwareBrandGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandGatewayTimeout  %+v", 504, o.Payload)
}

func (o *CreateHardwareBrandGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v1/brands][%d] createHardwareBrandGatewayTimeout  %+v", 504, o.Payload)
}

func (o *CreateHardwareBrandGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateHardwareBrandGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
