// Code generated by go-swagger; DO NOT EDIT.

package device_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// DeActivateDeviceReader is a Reader for the DeActivateDevice structure.
type DeActivateDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeActivateDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeActivateDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeActivateDeviceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeActivateDeviceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeActivateDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeActivateDeviceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeActivateDeviceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewDeActivateDeviceGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeActivateDeviceOK creates a DeActivateDeviceOK with default headers values
func NewDeActivateDeviceOK() *DeActivateDeviceOK {
	return &DeActivateDeviceOK{}
}

/*
DeActivateDeviceOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeActivateDeviceOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this de activate device o k response has a 2xx status code
func (o *DeActivateDeviceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this de activate device o k response has a 3xx status code
func (o *DeActivateDeviceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this de activate device o k response has a 4xx status code
func (o *DeActivateDeviceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this de activate device o k response has a 5xx status code
func (o *DeActivateDeviceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this de activate device o k response a status code equal to that given
func (o *DeActivateDeviceOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeActivateDeviceOK) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceOK  %+v", 200, o.Payload)
}

func (o *DeActivateDeviceOK) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceOK  %+v", 200, o.Payload)
}

func (o *DeActivateDeviceOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeActivateDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeActivateDeviceUnauthorized creates a DeActivateDeviceUnauthorized with default headers values
func NewDeActivateDeviceUnauthorized() *DeActivateDeviceUnauthorized {
	return &DeActivateDeviceUnauthorized{}
}

/*
DeActivateDeviceUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type DeActivateDeviceUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this de activate device unauthorized response has a 2xx status code
func (o *DeActivateDeviceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this de activate device unauthorized response has a 3xx status code
func (o *DeActivateDeviceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this de activate device unauthorized response has a 4xx status code
func (o *DeActivateDeviceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this de activate device unauthorized response has a 5xx status code
func (o *DeActivateDeviceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this de activate device unauthorized response a status code equal to that given
func (o *DeActivateDeviceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeActivateDeviceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceUnauthorized  %+v", 401, o.Payload)
}

func (o *DeActivateDeviceUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceUnauthorized  %+v", 401, o.Payload)
}

func (o *DeActivateDeviceUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeActivateDeviceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeActivateDeviceForbidden creates a DeActivateDeviceForbidden with default headers values
func NewDeActivateDeviceForbidden() *DeActivateDeviceForbidden {
	return &DeActivateDeviceForbidden{}
}

/*
DeActivateDeviceForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type DeActivateDeviceForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this de activate device forbidden response has a 2xx status code
func (o *DeActivateDeviceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this de activate device forbidden response has a 3xx status code
func (o *DeActivateDeviceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this de activate device forbidden response has a 4xx status code
func (o *DeActivateDeviceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this de activate device forbidden response has a 5xx status code
func (o *DeActivateDeviceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this de activate device forbidden response a status code equal to that given
func (o *DeActivateDeviceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeActivateDeviceForbidden) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceForbidden  %+v", 403, o.Payload)
}

func (o *DeActivateDeviceForbidden) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceForbidden  %+v", 403, o.Payload)
}

func (o *DeActivateDeviceForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeActivateDeviceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeActivateDeviceNotFound creates a DeActivateDeviceNotFound with default headers values
func NewDeActivateDeviceNotFound() *DeActivateDeviceNotFound {
	return &DeActivateDeviceNotFound{}
}

/*
DeActivateDeviceNotFound describes a response with status code 404, with default header values.

Not Found. The API gateway did not process the request because the requested resource could not be found.
*/
type DeActivateDeviceNotFound struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this de activate device not found response has a 2xx status code
func (o *DeActivateDeviceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this de activate device not found response has a 3xx status code
func (o *DeActivateDeviceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this de activate device not found response has a 4xx status code
func (o *DeActivateDeviceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this de activate device not found response has a 5xx status code
func (o *DeActivateDeviceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this de activate device not found response a status code equal to that given
func (o *DeActivateDeviceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeActivateDeviceNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceNotFound  %+v", 404, o.Payload)
}

func (o *DeActivateDeviceNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceNotFound  %+v", 404, o.Payload)
}

func (o *DeActivateDeviceNotFound) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeActivateDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeActivateDeviceConflict creates a DeActivateDeviceConflict with default headers values
func NewDeActivateDeviceConflict() *DeActivateDeviceConflict {
	return &DeActivateDeviceConflict{}
}

/*
DeActivateDeviceConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this operation will conflict with an already existing device record.
*/
type DeActivateDeviceConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this de activate device conflict response has a 2xx status code
func (o *DeActivateDeviceConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this de activate device conflict response has a 3xx status code
func (o *DeActivateDeviceConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this de activate device conflict response has a 4xx status code
func (o *DeActivateDeviceConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this de activate device conflict response has a 5xx status code
func (o *DeActivateDeviceConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this de activate device conflict response a status code equal to that given
func (o *DeActivateDeviceConflict) IsCode(code int) bool {
	return code == 409
}

func (o *DeActivateDeviceConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceConflict  %+v", 409, o.Payload)
}

func (o *DeActivateDeviceConflict) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceConflict  %+v", 409, o.Payload)
}

func (o *DeActivateDeviceConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeActivateDeviceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeActivateDeviceInternalServerError creates a DeActivateDeviceInternalServerError with default headers values
func NewDeActivateDeviceInternalServerError() *DeActivateDeviceInternalServerError {
	return &DeActivateDeviceInternalServerError{}
}

/*
DeActivateDeviceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type DeActivateDeviceInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this de activate device internal server error response has a 2xx status code
func (o *DeActivateDeviceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this de activate device internal server error response has a 3xx status code
func (o *DeActivateDeviceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this de activate device internal server error response has a 4xx status code
func (o *DeActivateDeviceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this de activate device internal server error response has a 5xx status code
func (o *DeActivateDeviceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this de activate device internal server error response a status code equal to that given
func (o *DeActivateDeviceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeActivateDeviceInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeActivateDeviceInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeActivateDeviceInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeActivateDeviceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeActivateDeviceGatewayTimeout creates a DeActivateDeviceGatewayTimeout with default headers values
func NewDeActivateDeviceGatewayTimeout() *DeActivateDeviceGatewayTimeout {
	return &DeActivateDeviceGatewayTimeout{}
}

/*
DeActivateDeviceGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type DeActivateDeviceGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this de activate device gateway timeout response has a 2xx status code
func (o *DeActivateDeviceGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this de activate device gateway timeout response has a 3xx status code
func (o *DeActivateDeviceGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this de activate device gateway timeout response has a 4xx status code
func (o *DeActivateDeviceGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this de activate device gateway timeout response has a 5xx status code
func (o *DeActivateDeviceGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this de activate device gateway timeout response a status code equal to that given
func (o *DeActivateDeviceGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *DeActivateDeviceGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeActivateDeviceGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /v1/devices/id/{id}/deactivate][%d] deActivateDeviceGatewayTimeout  %+v", 504, o.Payload)
}

func (o *DeActivateDeviceGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *DeActivateDeviceGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
