// Code generated by go-swagger; DO NOT EDIT.

package device_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zededa/terraform-provider/models"
)

// CreateEdgeNodeReader is a Reader for the CreateEdgeNode structure.
type CreateEdgeNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEdgeNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateEdgeNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateEdgeNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateEdgeNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateEdgeNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateEdgeNodeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateEdgeNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewCreateEdgeNodeGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateEdgeNodeOK creates a CreateEdgeNodeOK with default headers values
func NewCreateEdgeNodeOK() *CreateEdgeNodeOK {
	return &CreateEdgeNodeOK{}
}

/*
CreateEdgeNodeOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateEdgeNodeOK struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create edge node o k response has a 2xx status code
func (o *CreateEdgeNodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create edge node o k response has a 3xx status code
func (o *CreateEdgeNodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge node o k response has a 4xx status code
func (o *CreateEdgeNodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create edge node o k response has a 5xx status code
func (o *CreateEdgeNodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create edge node o k response a status code equal to that given
func (o *CreateEdgeNodeOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateEdgeNodeOK) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeOK  %+v", 200, o.Payload)
}

func (o *CreateEdgeNodeOK) String() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeOK  %+v", 200, o.Payload)
}

func (o *CreateEdgeNodeOK) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateEdgeNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEdgeNodeBadRequest creates a CreateEdgeNodeBadRequest with default headers values
func NewCreateEdgeNodeBadRequest() *CreateEdgeNodeBadRequest {
	return &CreateEdgeNodeBadRequest{}
}

/*
CreateEdgeNodeBadRequest describes a response with status code 400, with default header values.

Bad Request. The API gateway did not process the request because of missing parameter or invalid value of parameters.
*/
type CreateEdgeNodeBadRequest struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create edge node bad request response has a 2xx status code
func (o *CreateEdgeNodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create edge node bad request response has a 3xx status code
func (o *CreateEdgeNodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge node bad request response has a 4xx status code
func (o *CreateEdgeNodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create edge node bad request response has a 5xx status code
func (o *CreateEdgeNodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create edge node bad request response a status code equal to that given
func (o *CreateEdgeNodeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateEdgeNodeBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeBadRequest  %+v", 400, o.Payload)
}

func (o *CreateEdgeNodeBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeBadRequest  %+v", 400, o.Payload)
}

func (o *CreateEdgeNodeBadRequest) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateEdgeNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEdgeNodeUnauthorized creates a CreateEdgeNodeUnauthorized with default headers values
func NewCreateEdgeNodeUnauthorized() *CreateEdgeNodeUnauthorized {
	return &CreateEdgeNodeUnauthorized{}
}

/*
CreateEdgeNodeUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The API gateway did not process the request because it lacks valid authentication credentials for the target resource. The request header has either no authorization details or an authorization that has been refused.
*/
type CreateEdgeNodeUnauthorized struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create edge node unauthorized response has a 2xx status code
func (o *CreateEdgeNodeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create edge node unauthorized response has a 3xx status code
func (o *CreateEdgeNodeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge node unauthorized response has a 4xx status code
func (o *CreateEdgeNodeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create edge node unauthorized response has a 5xx status code
func (o *CreateEdgeNodeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create edge node unauthorized response a status code equal to that given
func (o *CreateEdgeNodeUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateEdgeNodeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateEdgeNodeUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateEdgeNodeUnauthorized) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateEdgeNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEdgeNodeForbidden creates a CreateEdgeNodeForbidden with default headers values
func NewCreateEdgeNodeForbidden() *CreateEdgeNodeForbidden {
	return &CreateEdgeNodeForbidden{}
}

/*
CreateEdgeNodeForbidden describes a response with status code 403, with default header values.

Forbidden. The API gateway did not process the request because the requestor does not have edge-node level access permission for the operation or does not have access scope to the project.
*/
type CreateEdgeNodeForbidden struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create edge node forbidden response has a 2xx status code
func (o *CreateEdgeNodeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create edge node forbidden response has a 3xx status code
func (o *CreateEdgeNodeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge node forbidden response has a 4xx status code
func (o *CreateEdgeNodeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create edge node forbidden response has a 5xx status code
func (o *CreateEdgeNodeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create edge node forbidden response a status code equal to that given
func (o *CreateEdgeNodeForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateEdgeNodeForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeForbidden  %+v", 403, o.Payload)
}

func (o *CreateEdgeNodeForbidden) String() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeForbidden  %+v", 403, o.Payload)
}

func (o *CreateEdgeNodeForbidden) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateEdgeNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEdgeNodeConflict creates a CreateEdgeNodeConflict with default headers values
func NewCreateEdgeNodeConflict() *CreateEdgeNodeConflict {
	return &CreateEdgeNodeConflict{}
}

/*
CreateEdgeNodeConflict describes a response with status code 409, with default header values.

Conflict. The API gateway did not process the request because this edge node record will conflict with an already existing edge node record.
*/
type CreateEdgeNodeConflict struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create edge node conflict response has a 2xx status code
func (o *CreateEdgeNodeConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create edge node conflict response has a 3xx status code
func (o *CreateEdgeNodeConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge node conflict response has a 4xx status code
func (o *CreateEdgeNodeConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create edge node conflict response has a 5xx status code
func (o *CreateEdgeNodeConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create edge node conflict response a status code equal to that given
func (o *CreateEdgeNodeConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateEdgeNodeConflict) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeConflict  %+v", 409, o.Payload)
}

func (o *CreateEdgeNodeConflict) String() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeConflict  %+v", 409, o.Payload)
}

func (o *CreateEdgeNodeConflict) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateEdgeNodeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEdgeNodeInternalServerError creates a CreateEdgeNodeInternalServerError with default headers values
func NewCreateEdgeNodeInternalServerError() *CreateEdgeNodeInternalServerError {
	return &CreateEdgeNodeInternalServerError{}
}

/*
CreateEdgeNodeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error. The API gateway experienced an unexpected condition. Specific error condition is indicated in error codes.
*/
type CreateEdgeNodeInternalServerError struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create edge node internal server error response has a 2xx status code
func (o *CreateEdgeNodeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create edge node internal server error response has a 3xx status code
func (o *CreateEdgeNodeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge node internal server error response has a 4xx status code
func (o *CreateEdgeNodeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create edge node internal server error response has a 5xx status code
func (o *CreateEdgeNodeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create edge node internal server error response a status code equal to that given
func (o *CreateEdgeNodeInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateEdgeNodeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateEdgeNodeInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateEdgeNodeInternalServerError) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateEdgeNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEdgeNodeGatewayTimeout creates a CreateEdgeNodeGatewayTimeout with default headers values
func NewCreateEdgeNodeGatewayTimeout() *CreateEdgeNodeGatewayTimeout {
	return &CreateEdgeNodeGatewayTimeout{}
}

/*
CreateEdgeNodeGatewayTimeout describes a response with status code 504, with default header values.

Gateway Timeout. The API gateway did not receive a timely response from an upstream microservice it needed to communicate with in order to complete the request.
*/
type CreateEdgeNodeGatewayTimeout struct {
	Payload *models.ZsrvResponse
}

// IsSuccess returns true when this create edge node gateway timeout response has a 2xx status code
func (o *CreateEdgeNodeGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create edge node gateway timeout response has a 3xx status code
func (o *CreateEdgeNodeGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge node gateway timeout response has a 4xx status code
func (o *CreateEdgeNodeGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this create edge node gateway timeout response has a 5xx status code
func (o *CreateEdgeNodeGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this create edge node gateway timeout response a status code equal to that given
func (o *CreateEdgeNodeGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

func (o *CreateEdgeNodeGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *CreateEdgeNodeGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /v1/devices][%d] createEdgeNodeGatewayTimeout  %+v", 504, o.Payload)
}

func (o *CreateEdgeNodeGatewayTimeout) GetPayload() *models.ZsrvResponse {
	return o.Payload
}

func (o *CreateEdgeNodeGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZsrvResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
